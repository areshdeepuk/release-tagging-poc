name: CI Pipeline

#on: [pull_request]

on:
  push:
    branches:
      - main    

jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'  # Specify the distribution here

      - name: Build Java application
        run: mvn clean package -DskipTests
    
      - name: Get Short Git_SHA
        id: git_sha
        run: echo "::set-output name=sha::$(git rev-parse --short HEAD)"
        shell: bash

      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_REGISTRY_URL }}:dev_demoapp_${{ steps.git_sha.outputs.sha }} .

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Push Docker image
        run: |
          docker push ${{ secrets.DOCKER_REGISTRY_URL }}:dev_demoapp_${{ steps.git_sha.outputs.sha }}
      
  Deploy_Dev:
    needs: Build
    runs-on: ubuntu-latest
    steps:
      - name: Update manifest
        run: echo "Update manifest DEV..."
      - name: Health check step
        run: echo "Health check for dev..."
      - name: Save deploy status
        run: echo "${{ job.status }}" > deploy-status.txt
      - name: Upload deploy status
        uses: actions/upload-artifact@v3
        with:
          name: deploy-status
          path: deploy-status.txt
      - name: Set output if release
        id: set-output
        run: |
          if [[ "${{ startsWith(github.event.head_commit.message, 'release') }}" == "true" ]]; then
            echo "IS_RELEASE=true" >> $GITHUB_ENV
            echo "success" > release-status.txt
          else
            echo "IS_RELEASE=false" >> $GITHUB_ENV
            echo "fail" > release-status.txt
          fi
      - name: Upload release status
        uses: actions/upload-artifact@v3
        with:
          name: release-status
          path: release-status.txt
  
  Release_Manager:
    if: startsWith(github.event.head_commit.message, 'release') 
    needs: Deploy_Dev
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Get Short Git_SHA
        id: git_sha
        run: echo "::set-output name=sha::$(git rev-parse --short HEAD)"
        shell: bash

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
        
      - name: Pull the existing Docker image
        run: |
          docker pull ${{ secrets.DOCKER_REGISTRY_URL }}:dev_demoapp_${{ steps.git_sha.outputs.sha }}
        
      - name: Retag the Docker image
        run: |
          docker tag ${{ secrets.DOCKER_REGISTRY_URL }}:dev_demoapp_${{ steps.git_sha.outputs.sha }} ${{ secrets.DOCKER_REGISTRY_URL }}:qa_demoapp_${{ steps.git_sha.outputs.sha }}
        
      - name: Push the retagged Docker image
        run: |
          docker push ${{ secrets.DOCKER_REGISTRY_URL }}:qa_demoapp_${{ steps.git_sha.outputs.sha }}